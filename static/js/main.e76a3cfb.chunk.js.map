{"version":3,"sources":["Components/SearchBar.js","Components/unsplash.js","Components/ImageList.js","App.js","actions/imageAction.js","reducers/imageReducer.js","reducers/rootReducer.js","index.js"],"names":["SearchBar","handleInput","e","preventDefault","props","onSubmit","target","value","className","this","htmlFor","type","placeholder","onChange","Component","axios","create","baseURL","headers","Authorization","ImageList","images","List","length","map","image","key","id","alt","alt_description","src","urls","regular","style","width","margin","App","handleSubmit","a","unsplash","get","params","query","res","addImage","data","results","marginTop","connect","state","dispatch","imageAction","initState","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"6RA0BeA,G,iNAvBbC,YAAc,SAAAC,GACZA,EAAEC,iBACF,EAAKC,MAAMC,SAASH,EAAEI,OAAOC,Q,wEAG7B,OACE,6BACE,0BAAMC,UAAU,OAAOH,SAAUI,KAAKR,aACpC,yBAAKO,UAAU,cACb,2BAAOE,QAAQ,gBAAf,8BACA,2BACEF,UAAU,eACVG,KAAK,OACLC,YAAY,gBACZC,SAAUJ,KAAKR,qB,GAfLa,c,QCATC,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,2BACTC,QAAS,CACPC,cAAc,gF,QC8BHC,E,iLAhCH,IACAC,EAAWZ,KAAKL,MAAhBiB,OACFC,EAAOD,EAAOE,OAClBF,EAAOG,KAAI,SAAAC,GACT,OACE,yBAAKC,IAAKD,EAAME,IACd,yBAAKnB,UAAU,UACb,yBACEA,UAAU,0BACVoB,IAAKH,EAAMI,gBACXH,IAAKD,EAAME,GACXG,IAAKL,EAAMM,KAAKC,eAOxB,yBAAKxB,UAAU,WAAWyB,MAAO,CAAEC,MAAO,QAASC,OAAQ,SAA3D,8BAIJ,OACE,6BACE,yBAAK3B,UAAU,cACZc,Q,GA1BaR,aCMlBsB,E,2MAIJC,a,uCAAe,WAAOnC,GAAP,eAAAoC,EAAA,sEACKC,EAASC,IAAT,gBAA8B,CAC9CC,OAAQ,CAAEC,MAAOxC,KAFN,OACPyC,EADO,OAIb,EAAKvC,MAAMwC,SAASD,EAAIE,KAAKC,SAJhB,2C,yIAFbrC,KAAK4B,aAAa,c,+BASlB,OACE,yBAAK7B,UAAU,YAAYyB,MAAO,CAAEc,UAAW,SAC7C,wBAAIvC,UAAU,WAAd,WACA,kBAAC,EAAD,CAAWH,SAAUI,KAAK4B,eAAgB,6BAC1C,wBAAI7B,UAAU,qBAAd,uBAAuDC,KAAKL,MAAMiB,OAAOE,QACzE,wBAAIf,UAAU,cAAc,6BAC5B,kBAAC,EAAD,CAAWa,OAAQZ,KAAKL,MAAMiB,c,GAjBpBP,aAiCHkC,eAVS,SAAAC,GACtB,MAAO,CACL5B,OAAQ4B,EAAMJ,SAGS,SAAAK,GACzB,MAAO,CACLN,SAAU,SAACvB,GAAa6B,ECtCD,SAAA7B,GAAM,OAAI,SAAA6B,GACnCA,EAAU,CACRvC,KAAM,QACNU,YDmCiC8B,CAAY9B,QAGlC2B,CAA6CZ,G,eEzCtDgB,EAAY,GCGLC,EAAcC,YAAgB,CACzCT,KDF0B,WAAgC,IAA/BI,EAA8B,uDAAtBG,EAAWG,EAAW,uCACzD,OAAQA,EAAO5C,MACb,IAAK,QACH,OAAO4C,EAAOlC,OAEhB,QACE,OAAO4B,MECPO,EAAQC,YAAYJ,EAAaK,YAAgBC,MAEvDC,IAASC,OAAO,kBAAC,IAAD,CAAUL,MAAOA,GAAO,kBAAC,EAAD,OACtCM,SAASC,eAAe,W","file":"static/js/main.e76a3cfb.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass SearchBar extends Component {\n  handleInput = e => {\n    e.preventDefault();\n    this.props.onSubmit(e.target.value)\n  }\n  render() {\n    return (\n      <div>\n        <form className='form' onSubmit={this.handleInput}>\n          <div className='image-form'>\n            <label htmlFor='search-image'>Search your favourite pics</label>\n            <input\n              className='form-control'\n              type='text'\n              placeholder='Search images'\n              onChange={this.handleInput}\n            />\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default SearchBar\n","import axios from 'axios'\n\nexport default axios.create({\n  baseURL: 'https://api.unsplash.com',\n  headers: {\n    Authorization:\n      `Client-ID d94ed5ad7975ca4ae3e69e6722b825e1f8f506a06f0aed04fce35a89355077d8`\n  }\n})","import React, { Component } from 'react'\n\nclass ImageList extends Component {\n  render() {\n    const { images } = this.props;\n    const List = images.length ? (\n      images.map(image => {\n        return (\n          <div key={image.id}>\n            <div className='images'>\n              <img\n                className='img-fluid img-thumbnail'\n                alt={image.alt_description}\n                key={image.id}\n                src={image.urls.regular}\n              />\n            </div>\n          </div>\n        )\n      })\n    ) : (\n        <div className='no-image' style={{ width: '450px', margin: 'auto' }}>\n          Use different key words...\n      </div>\n      )\n    return (\n      <div>\n        <div className='image-list'>\n          {List}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ImageList\n","import React, { Component } from 'react'\nimport './App.css'\nimport SearchBar from './Components/SearchBar';\nimport unsplash from './Components/unsplash';\nimport { connect } from 'react-redux'\nimport { imageAction } from './actions/imageAction';\nimport ImageList from './Components/ImageList';\n\nclass App extends Component {\n  componentDidMount() {\n    this.handleSubmit('positive')\n  }\n  handleSubmit = async (e) => {\n    const res = await unsplash.get(`search/photos`, {\n      params: { query: e }\n    })\n    this.props.addImage(res.data.results)\n  }\n  render() {\n    return (\n      <div className='container' style={{ marginTop: '10px' }}>\n        <h2 className='welcome'>Welcome</h2>\n        <SearchBar onSubmit={this.handleSubmit} /><br />\n        <h2 className='thumbnail-gallery'>Thumbnail Gallery - {this.props.images.length}</h2>\n        <hr className=\"mt-2 mb-5\" /><br />\n        <ImageList images={this.props.images} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    images: state.data\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    addImage: (images) => { dispatch(imageAction(images)) }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","export const imageAction = images => dispatch => {\n  dispatch ({\n    type: 'IMAGE',\n    images\n  })\n}\n","const initState = {}\n\nexport const imageReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'IMAGE':\n      return action.images\n\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux'\nimport { imageReducer } from './imageReducer';\n\nexport const rootReducer = combineReducers({\n  data: imageReducer,\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\nimport { Provider } from 'react-redux'\nimport { rootReducer } from './reducers/rootReducer';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\nReactDOM.render(<Provider store={store}><App /></Provider>,\n  document.getElementById('root'));\n\n"],"sourceRoot":""}